# Simple workflow for deploying static content to GitHub Pages
name: Deploy Eleventy content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: 11ty
      - name: Restore cache
        uses: actions/cache@v3
        # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-fund
      - name: Build assets
        run: npm run build --if-present
      - name: Build site
        run: npm run build:site --if-present
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload `_site/`
          path: './_site'
      - name: Deploy to GitHub Pages ðŸš€
        id: deployment
        uses: actions/deploy-pages@v2
